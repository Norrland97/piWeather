[{"/home/pi/piWeather/pi-weather/src/index.js":"1","/home/pi/piWeather/pi-weather/src/App.js":"2","/home/pi/piWeather/pi-weather/src/reportWebVitals.js":"3","/home/pi/piWeather/pi-weather/src/canvasjs.react.js":"4","/home/pi/piWeather/pi-weather/src/canvasjs.min.js":"5"},{"size":500,"mtime":1608374091687,"results":"6","hashOfConfig":"7"},{"size":4690,"mtime":1608672852354,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1608374091687,"results":"9","hashOfConfig":"7"},{"size":2080,"mtime":1608643294836,"results":"10","hashOfConfig":"7"},{"size":479381,"mtime":1608643294836,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"g7x4jx",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pi/piWeather/pi-weather/src/index.js",[],["25","26"],"/home/pi/piWeather/pi-weather/src/App.js",["27","28"],"import './App.css';\nimport React from \"react\";\nimport data from \"./Backend/Logs/data.json\"\n\nimport CanvasJSReact from './canvasjs.react';\n// var CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar hs = [];\nvar ts = [];\n\nvar temp = data.weather_logs[data.weather_logs.length - 1].Temp;\nvar humi = data.weather_logs[data.weather_logs.length - 1].Humi;\n\nupdate();\n\nfunction App() {\n    return (\n        <Contents />\n        );\n}\n\nfunction Contents(){\n    return( \n    <div Style = \"width: 80%; padding-left: 10%\">\n        <Head />\n        <Body />\n    </div>\n    );\n}\n\nfunction Head (){\n    return(\n        <div>\n            <h1 Style = \"font-size:7em; margin-left:3em; padding-left: 0.1em; width: 2.65em;\" Class = \"shadow-6\"> <Clock /> </h1>\n            <h1> </h1>\n            <h2 Style = \"margin-top:-3em;\">Nuvarande temperatur: <CurrT /></h2> \n            <h2 Style=\"padding-top:1em;\">Nuvarande Luftfuktighet: <CurrH /></h2> \n        </div> \n    );\n}\n\nfunction Body (){\n    return(\n        <div Style = \"padding-top:4em;\">\n            \n            <TempGraph /> \n        \n            <HumidGraph /> \n        </div>\n    );\n}\n\nfunction CurrT(){\n    return (\n        <div>    \n            <h1>\n            {temp + \"\\u00B0 C \"}\n            </h1>\n        </div>\n    );\n}\n\nfunction CurrH(){\n    return (\n        <div>    \n            <h1>\n            {humi+\"%\"}\n            </h1>\n        </div>\n    );\n}\n\nfunction update(){\n    humidData();\n    tempData();\n    let temp = data.weather_logs[data.weather_logs.length - 1].Temp;\n    let humi = data.weather_logs[data.weather_logs.length - 1].Humi;\n}\n\nfunction HumidGraph (){\n    let options = {\n        theme: \"light2\", // \"light1\", \"dark1\", \"dark2\"\n        animationEnabled: true,\n        zoomEnabled: true,\n        title: {\n            text: \"Luftfuktighet det senaste dygnet\"\n        },\n        data: [{\n            type: \"line\",\n            xValueFormatString: \"HH MM\",\n            yValueFormatString: \"##.##%\",\n            dataPoints: hs\n        }]}\n    \n    return (\n    <div Style = \"padding-top:6em\">\n        <CanvasJSChart options = {options} \n            /* onRef={ref => this.chart = ref} */\n        />\n        {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n    </div>\n    );\n  \n}\n\nfunction humidData(){\n    hs.length = 0;\n    for (const elem of data.weather_logs){\n        hs.push({x: new Date(elem.Date), y: parseFloat(elem.Humi)})\n    } \n}\n\n/* TODO implement different line colors for different temperatures, see http://jsfiddle.net/canvasjs/tshg7tLg/\nfunction lineColor(elm){\n    if elem.y <= - function dataGenerator(limit) {\n        var y = 100;\n        var points = [];\n        var color;\n        for (var i = 0; i < limit; i += 1) {\n          y += (Math.random() * 100 - 50);\n          if (y > 50)\n            color = \"red\";\n          else\n            color = \"blue\";\n          points.push({\n            x: i - limit / 2,\n            y: y,\n            lineColor: color,\n            color:color\n          });\n        }\n        return points;\n      }\n}*/\n\nfunction TempGraph (){  \n    \n\t\tlet options = {\n\t\t\ttheme: \"light2\", // \"light1\", \"dark1\", \"dark2\"\n\t\t\tanimationEnabled: true,\n\t\t\tzoomEnabled: true,\n\t\t\ttitle: {\n\t\t\t\ttext: \"Temperatur det senaste dygnet\"\n\t\t\t},\n\t\t\tdata: [{\n\t\t\t\ttype: \"line\",\n\t\t\t\txValueFormatString: \"HH MM\",\n\t\t\t\tyValueFormatString: \"##.##C\",\n\t\t\t\tdataPoints: ts\n\t\t\t}]}\n\t\t\n\t\treturn (\n\t\t<div>\n\t\t\t<CanvasJSChart options = {options} \n\t\t\t\t/* onRef={ref => this.chart = ref} */\n\t\t\t/>\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n\t\t</div>\n\t\t);\n      \n}\n\n/* add function of getting the list of temp and list of humidity from a Json object*/\nfunction tempData(){\n    ts.length = 0;\n    for (const elem of data.weather_logs){\n        ts.push({x: new Date(elem.Date), y: parseFloat(elem.Temp)})\n    } \n}\n\n\n\nclass Clock extends React.Component {\n    constructor (props){\n        super(props);\n        this.state = {date: new Date()};\n    }\n\n    componentDidMount() {\n        if(!this.timerId){     \n            this.timerId = setInterval(()=>{\n              this.tick();\n            }, 1000);\n          }\n      }\n\n    componentWillUnmount (){\n        clearInterval (this.timerID);\n    }\n\n    tick (){\n        this.setState ({date: new Date()});\n        update();\n    }\n\n    render() {\n      return (\n        <div Style =\"display: inline-block;\">\n          {this.state.date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' , hour12: false})}\n        </div>\n      );\n    }\n}\n\n\nexport default App;\n","/home/pi/piWeather/pi-weather/src/reportWebVitals.js",[],"/home/pi/piWeather/pi-weather/src/canvasjs.react.js",["29"],"ï»¿/*\r\nCanvasJS React Charts - https://canvasjs.com/\r\nCopyright 2020 fenopix\r\n\r\n--------------------- License Information --------------------\r\nCanvasJS is a commercial product which requires purchase of license. Without a commercial license you can use it for evaluation purposes for upto 30 days. Please refer to the following link for further details.\r\nhttps://canvasjs.com/license/\r\n\r\n*/\r\nvar React = require('react');\r\nvar CanvasJS = require('./canvasjs.min');\r\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\r\n\r\nclass CanvasJSChart extends React.Component {\r\n\tstatic _cjsContainerId = 0\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.options = props.options ? props.options : {};\r\n\t\tthis.containerProps = props.containerProps ? props.containerProps : { width: \"100%\", position: \"relative\" };\r\n\t\tthis.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\r\n\t\tthis.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t//Create Chart and Render\t\t\r\n\t\tthis.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\r\n\t\tthis.chart.render();\r\n\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(this.chart);\r\n\t}\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\t//Check if Chart-options has changed and determine if component has to be updated\r\n\t\treturn !(nextProps.options === this.options);\r\n\t}\r\n\tcomponentDidUpdate() {\r\n\t\t//Update Chart Options & Render\r\n\t\tthis.chart.options = this.props.options;\r\n\t\tthis.chart.render();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\t//Destroy chart and remove reference\r\n\t\tthis.chart.destroy();\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(undefined);\r\n\t}\r\n\trender() {\r\n\t\t//return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\t\t\r\n\t\treturn <div id={this.chartContainerId} style={this.containerProps} />\r\n\t}\r\n}\r\n\r\nvar CanvasJSReact = {\r\n\tCanvasJSChart: CanvasJSChart,\r\n\tCanvasJS: CanvasJS\r\n};\r\n\r\nexport default CanvasJSReact;","/home/pi/piWeather/pi-weather/src/canvasjs.min.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":76,"column":9,"nodeType":"36","messageId":"37","endLine":76,"endColumn":13},{"ruleId":"34","severity":1,"message":"38","line":77,"column":9,"nodeType":"36","messageId":"37","endLine":77,"endColumn":13},{"ruleId":"39","severity":1,"message":"40","line":1,"column":1,"nodeType":"41","messageId":"42","fix":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'temp' is assigned a value but never used.","Identifier","unusedVar","'humi' is assigned a value but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"46","text":"47"},"no-global-assign","no-unsafe-negation",[-1,0],""]